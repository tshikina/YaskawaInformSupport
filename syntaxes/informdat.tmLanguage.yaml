{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "INFORM data files for YASKAWA Motoman",
	"patterns": [
		{ "include": "#vardatfile" },
		{ "include": "#varnamedatfile" },
		{ "include": "#ionamedatfile" },
		{ "include": "#iomnamedatfile" },
		{ "include": "#cioprglstfile" },
		{ "include": "#macrodatfile"},
		{ "include": "#generaldatfile" },
	],
	"repository": {
		#------------------------
		# file types
		# VAR.DAT
		"vardatfile": {
			"begin": "^(//VAR)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#integervarsection" },
				{ "include": "#floatvarsection" },
				{ "include": "#stringvarsection" },
				{ "include": "#positionvarsection" },
				{ "include": "#metashare" },
				{ "include": "#metaheader" }
			]
		},
		# VARNAME.DAT
		"varnamedatfile": {
			"begin": "^(//VARNAME)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#varnamesection" },
				{ "include": "#metashare" },
				{ "include": "#metaheader" }
			]
		},
		# IONAME.DAT,EXIONAME.DAT
		"ionamedatfile": {
			"begin": "^(/IONAME|/EXIONAME)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#ionamesection" },
				{ "include": "#metaheader" }
			]
		},
		# IOMNAME.DAT
		"iomnamedatfile": {
			"begin": "^(/IOMMAME)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#iomnamesection" },
				{ "include": "#metaheader" }
			]
		},
		# CIOPRG.LST
		"cioprglstfile": {
			"begin": "^(/CIOPRG.*)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#msection" },
				{ "include": "#ciosection" },
				{ "include": "#iomessagesection" },
				{ "include": "#metaheader" }
			]
		},
		# MACRO.DAT
		"macrodatfile": {
			"begin": "^(//MACRO.*)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#macrocommentsection" },
				{ "include": "#macrotagcommsection" },
				{ "include": "#macrotaginitsection" },
				{ "include": "#macrometajobname" },
				{ "include": "#macrometaattr" },
				{ "include": "#metaheader" }
			]
		},
		# other DAT,PRM,CND files
		"generaldatfile": {
			"begin": "^(/.*)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"end": "\\z",
			"patterns": [
				{ "include": "#metaheader" },
				{ "include": "#floatvalues" }
			]
		},


		
		#------------------------
		# sections
		# VAR.DAT/B,I,D
		"integervarsection": {
			"begin": "^(///(B|I|D))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [{"include": "#decimalvalues"}]
				}
			}
		},
		# VAR.DAT/R
		"floatvarsection": {
			"begin": "^(///(R))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [{"include": "#floatvalues"}]
				}
			}
		},
		# VAR.DAT/S
		"stringvarsection": {
			"begin": "^(///(S))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [{
						"match": "^.{0,32}$",
						"name": "string.other.stringvar.informdat"
					},{
						"match": "^.*$",
						"name": "invalid.illegal.stringvar.informdat"
					}]
				}
			}
		},
		# VAR.DAT/P
		"positionvarsection": {
			"begin": "^(///(P))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [
						{"include": "#quotedstrings"},
						{"include": "#floatvalues"},
						{"include": "#decimalvalues"}
					]
				}
			}
		},
		# VARNAME.DAT
		"varnamesection": {
			"begin": "^(///(B|I|D|R|S|P|BP|EX))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.varname.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [ {
						"match": "^([0-9]+)\\s+(1,0),(.{1,16})$",
						"captures": {
							"1": {"name": "variable.other.informdat"},
							"2": {"name": "meta.preprocessor.varname.informdat"},
							"3": {"name": "string.other.varname.informdat"}
						}
					},{
						"match": "^([0-9]+)\\s+(1,0),(.*)$",
						"captures": {
							"1": {"name": "variable.other.informdat"},
							"2": {"name": "meta.preprocessor.varname.informdat"},
							"3": {"name": "invalid.illegal.varname.informdat"}
						}
					}]
				}
			}
		},
		# IONAME.DAT
		"ionamesection": {
			"begin": "^(//(IN|OUT|EXIN|EXOUT))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.varname.informdat" } },
			"while": "(^[^,]*,[^,]*,[^,]*,[^,]*$)",
			"whileCaptures": { 
				"1":{
					"patterns": [{
							"match": "^([^,]{0,16}),([^,]{0,16}),([^,]{0,16}),([^,]{0,16}$)",
							"captures": {
								"1": {"name": "string.other.ioname.informdat"},
								"2": {"name": "string.other.ioname.informdat"},
								"3": {"name": "string.other.ioname.informdat"},
								"4": {"name": "string.other.ioname.informdat"}
							}
						},{
							"match": "(.*)",
							"name": "invalid.illegal.ioname.informdat"
						}
					]
				}
			}
		},
		# IOMNAME
		"iomnamesection": {
			"begin": "^(//(NAME))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.name.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [ {
						"match": "^(.{0,16})$",
						"name": "string.other.varname.informdat"
					},{
						"match": "^(.*)$",
						"name": "invalid.illegal.varname.informdat"
					}]
				}
			}
		},
		# CIOPRG.LST/$M
		"msection": {
			"begin": "^(//\\$M)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.m.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [
						{ "include": "#decimalvalues" }
					]
				}
			}
		},
		# VAR.DAT/KEY
		"ciosection": {
			"begin": "^(//KEY.*)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.cio.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [
						{ "include": "#ciocontrol" },
						{ "include": "#ciocommands"},
						{ "include": "#mvariables" },
						{ "include": "#decimalvalues" }
					]
				}
			}
		},
		# VAR.DAT/ALARM,MESSAGE
		"iomessagesection":{
			"begin": "^(//(ALARM|MESSAGE).*)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.iomessage.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1" : {
					"patterns": [{
						"match": "^.{0,32}$",
						"name": "string.unquoted.iomessage.informdat"
					},{
						"match": "^.*$",
						"name": "invalid.illegal.length.iomessage.informdat"
					}
					]
				}
			}
		},
		# MACRO.DAT/COMMENT1,2
		"macrocommentsection": {
			"begin": "^(///COMMENT(1|2))$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.comment.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1": {
					"name": "string.other.arg.informdat"
				}
			}
		},
		# MACRO.DAT/TAGCOMM
		"macrotagcommsection": {
			"begin": "^(///TAGCOMM)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.tagcomm.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1": {
					"name": "variable.other.informdat"
				}
			}
		},
		# MACRO.DAT/TAGINIT
		"macrotaginitsection": {
			"begin": "^(///TAGINIT)$",
			"beginCaptures": { "1" : { "name": "meta.preprocessor.taginit.informdat" } },
			"while": "^([^/].*)$",
			"whileCaptures": {
				"1": {
					"name": "meta.preprocessor.taginit.informdat"
				}
			}
		},
		# MACRO.DAT/JOB1,2
		"macrometajobname": {
			"match": "^///JOB(1|2)\\s+(\\S+)",
			"name": "meta.preprocessor.jobname.informdat",
			"captures": {
				"2": { "name": "entity.name.function.jobname.informdat" }
			}
		},
		# MACRO.DAT/ATTR,ARGSET,ARGTYPE,TAGDISP
		"macrometaattr": {
			"match": "^(///(ATTR|ARGSET|ARGTYPE|TAGDISP))\\s+(\\S+)",
			"captures": {
				"1": { "name": "meta.preprocessor.attr.informdat" },
				"3": { "patterns": [{"include": "#decimalvalues"}] }
			}
		},


		#------------------------
		# contents
		"metaheader": {
			"match": "^/.*",
			"name": "meta.preprocessor.informdat"
		},
		"metashare": {
			"match": "^(///SHARE)(.*)",
			"captures": {
				"1": { "name": "meta.preprocessor.share.informdat" },
				"2": { "patterns": [{"include": "#decimalvalues"}]}
			}
		},
		"decimalvalues": {
			"match": "\\b[-]?[1-9]*[0-9]+\\b",
			"name": "constant.numeric.decimal.informdat"
		},
		"floatvalues": {
			"match": "\\b[+-]?[0-9]+(\\.[0-9]+([eE][+-]?[0-9]+)?)?\\b",
			"name": "constant.numeric.float.informdat"
		},
		"quotedstrings": {
			"name": "string.quoted.double.informdat",
			"begin": "\"",
			"end": "\""
		},
		"ioname":{
			"patterns": [ {
				"match": ".{0,16}",
				"name": "string.other.varname.informdat"
			},{
				"match": ".*",
				"name": "invalid.illegal.varname.informdat"
			}]
		},
		"ciocontrol": {
			"patterns": [
				{
					"match": "^(PART.*)$",
					"name": "keyword.control.general.informdat"
				},
				{
					"match": "^END$",
					"name": "keyword.control.general.informdat"
				}
			]
		},
		"ciocommands": {
			"patterns": [
				{
					"match": "^\\s*[[:upper:]-]+\\b",
					"name": "support.function.informdat"
				}
			]
		},
		"mvariables": {
			"patterns": [
				{
					"match": "\\bM[0-9]+\\b",
					"name": "variable.other.register.informdat"
				},
				{
					"match": "#[0-9]+\\b",
					"name": "variable.other.io.informdat"
				}
			]
		},
	},
	"scopeName": "source.informdat"
}